@page "/admin/testing/testing2"

@model dynamic

@using System
@using System.Globalization;
@using System.Reflection;
@using Microsoft.AspNetCore.Authorization
@using Microsoft.Extensions.Caching.Distributed
@using Microsoft.Extensions.DependencyInjection
@using Newtonsoft.Json
@using OrchardCore.BackgroundJobs
@using OrchardCore.Data
@using OrchardCore.Data.Migration
@using OrchardCore.Environment.Shell
@using OrchardCore.Environment.Shell.Builders
@using OrchardCore.Environment.Shell.Descriptor.Models
@using OrchardCore.Environment.Shell.Removing
@using OrchardCore.Tenants
@using YesSql
@using YesSql.Indexes

@inject IDistributedCache DistributedCache
@inject IAuthorizationService AuthorizationService
@inject IShellHost ShellHost

@functions
{
    public async Task<IActionResult> OnPostDo()
    {
        await DistributedCache.SetStringAsync("Testing2Action1Pause", false.ToString());

        // Do the job;

        return RedirectToPage("testing");
    }

    public async Task<IActionResult> OnPostPause()
    {
        await DistributedCache.SetStringAsync("Testing2Action1Pause", true.ToString());
        return RedirectToPage("testing");
    }

    public async Task<IActionResult> OnPostRefresh()
    {
        // Do the job;
        await Task.Delay(50);

        return RedirectToPage("testing");
    }

    public async Task<IActionResult> OnPostDoAction1()
    {
        if (!await AuthorizationService.AuthorizeAsync(User, Permissions.ManageTenants))
        {
            return Forbid();
        }

        await DistributedCache.SetStringAsync("Testing2Action1Pause", false.ToString());

        // Do the job;
        await HttpBackgroundJob.AfterEndOfRequestAsync("RemoveTenant1Tables", async scope =>
        {
            for (var i = 0; i <= 100; i = i + 10)
            {
                await DistributedCache.SetStringAsync("Testing2Action1Progress", i.ToString());
                await Task.Delay(500);
            }

            var shellRemovingManager = scope.ServiceProvider.GetRequiredService<IShellRemovingManager>();

            var tenant = "Tenant1";
            var context = await shellRemovingManager.RemoveAsync(tenant);
            if (context.Success)
            {
                await DistributedCache.SetStringAsync(
                    "TestingSuccessMessage",
                    $"'The tenant '{tenant}' was removed successfully.");
            }
            else
            {
                await DistributedCache.SetStringAsync(
                    "TestingErrorMessage",
                    $"Failed to remove the tenant '{tenant}': " + context.ErrorMessage);
            }
        });

        return RedirectToPage("testing");
    }

    public async Task<IActionResult> OnPostPauseAction1()
    {
        await DistributedCache.SetStringAsync("Testing2Action1Pause", true.ToString());
        return RedirectToPage("testing");
    }

    public async Task<ContentResult> OnGetAction1Progress()
    {
        var progressString = await DistributedCache.GetStringAsync("Testing2Action1Progress");
        if (!Decimal.TryParse(progressString, NumberStyles.Number, CultureInfo.InvariantCulture, out var progress))
        {
            progress = 0;
        }

        return new ContentResult { Content = progress.ToString(CultureInfo.InvariantCulture) };
    }
}

<div class="tab-pane fade" id="testing2" role="tabpanel" aria-labelledby="testing2-tab">
    <div class="form-group card">
        <div class="card-body w-lg-75">
            <button asp-page="Testing2" asp-page-handler="PauseAction1" class="btn btn-sm btn-outline-secondary mx-1">Pause</button>
            <button asp-page="Testing2" asp-page-handler="DoAction1" class="btn btn-sm btn-outline-success mx-1">Remove</button>
            <span>Tenant1</span>
            <button asp-page="Testing2" asp-page-handler="Refresh" class="btn btn-sm btn-outline-info mx-1 float-end">Refresh</button>
            <button asp-page="Testing2" asp-page-handler="Do" class="btn btn-sm btn-outline-success mx-1 float-end">Do All</button>
            <button asp-page="Testing2" asp-page-handler="Pause" class="btn btn-sm btn-outline-secondary mx-1 float-end">Pause</button>
            <div class="form-group mt-3">
                <div class="progress">
                    <div class="testing2-action1-progress-bar progress-bar" role="progressbar"></div>
                </div>
            </div>
        </div>
    </div>
</div>
